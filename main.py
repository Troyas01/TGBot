from aiogram import Bot, Dispatcher, executor, types
from config import TOKEN # –§–∞–π–ª –∫–æ–Ω—Ñ–∏–≥–∞ –Ω–µ –≤—ã–∫–ª–∞–¥—ã–≤–∞—é, —Ç–∞–º —Ç–æ–∫–µ–Ω
import os
import pyautogui
from time import sleep
import subprocess
from cmd_bot import kb, ReplyKeyboardMarkup, ReplyKeyboardRemove


bot = Bot(TOKEN)
dp = Dispatcher(bot)
# ADMIN = #–°—é–¥—ã —Å–≤–æ–π –¢–ì ID –ø—Ä–æ–ø–∏—à–∏, —á—Ç–æ–±—ã –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É –±—ã–ª —Ç–æ–ª—å–∫–æ —É —Ç–µ–±—è


####################
# –ö–û–ú–ê–ù–î–ê –°–¢–ê–†–¢
@dp.message_handler(commands=['start'])
async def command_start(message: types.Message):
    if message.chat.id == ADMIN:
        await message.answer(f"\nüîê<b><u>---WELCOME TO THE REMOTE PC---</u></b>üîê\n"
                             f"\nDear <b>{message.from_user.first_name},</b>"
                             f"\nüëá–¢—ã–∫–∞–π –º–µ–Ω—é", parse_mode='html', reply_markup=ReplyKeyboardRemove())
    else:
        await message.answer('NOT FOR U!')

# –ö–û–ú–ê–ù–î–ê –•–ï–õ–ü
@dp.message_handler(commands=['help'])
async def command_help(message: types.Message):
    if message.chat.id == ADMIN:
        await message.answer(f"\n<u>---INFO ABOUT CMD---</u>\n"
                             f"\n<b>/start</b> - –¢—É–ø–æ —Ä–∞–¥–∏ –∫–Ω–æ–ø–∫–∏"
                             f"\n<b>/cmd</b> - –û—Ç–∫—Ä—ã—Ç—å –∫–æ–º–∞–Ω–¥—ã(–∫–Ω–æ–ø–∫–∏)\n"
                             f"\n<b><i>–°–ø–∏—Å–æ–∫ cmd(buttons):</i></b>\n"
                             f"\n<code>screen</code> - –°–¥–µ–ª–∞—Ç—å —Å–∫—Ä–∏–Ω —ç–∫—Ä–∞–Ω–∞ –∏ –ø—Ä–∏—Å–ª–∞—Ç—å"
                             f"\n<code>open google</code> - –û—Ç–∫—Ä—ã—Ç—å Chrome"
                             f"\n<code>close google</code> - –ó–∞–∫—Ä—ã—Ç—å Chrome"
                             f"\n<code>lockPC</code> - –ó–∞–ª–æ—á–∏—Ç—å –ü–ö"
                             f"\n<code>sleepPC</code> - –ü–æ–≥—Ä—É–∑–∏—Ç—å –ü–ö –≤ —Å–æ–Ω"
                             f"\n<code>sound-10</code> - –£–±–∞–≤–∏—Ç—å –∑–≤—É–∫ –Ω–∞ 10"
                             f"\n<code>sound+10</code> - –ü—Ä–∏–±–∞–≤–∏—Ç—å –∑–≤—É–∫ –Ω–∞ 10"
                             f"\n<b>closekey - –ó–∞–∫—Ä—ã—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É</b>",
                             parse_mode='html')
    else:
        await message.answer('NOT FOR U!')

@dp.message_handler(commands=['cmd'])
async def commands(message: types.Message):
    await message.answer(f"–í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–¥–µ–ª–∞—Ç—å:", reply_markup=kb)

@dp.message_handler(content_types=['text'])
async def filter_text(message: types.Message):
    if message.chat.id == ADMIN:

    # –ó–ê–ö–†–´–¢–¨ –ì–£–ì–õ –•–†–û–ú
        if message.text.lower() in ['close google', 'close goo', 'closegoogle']:
            await message.answer("–ó–∞–∫—Ä—ã–≤–∞—é –ì—É–≥–ª. . .")
            sleep(2)
            subprocess.run("powershell get-process chrome | "
                           "ForEach-Object { $_.CloseMainWindow() | Out-Null}")

    # –û–¢–ö–†–´–¢–¨ –ì–£–ì–õ –•–†–û–ú
        elif message.text.lower() in ['open google', 'open goo', 'opengoogle']:
            await message.answer("–û—Ç–∫—Ä—ã–≤–∞—é –ì—É–≥–ª. . .")
            sleep(2)
            os.system("start chrome")

    # –°–î–ï–õ–ê–¢–¨ –°–ö–†–ò–ù–®–û–¢ –ò –ü–†–ò–°–õ–ê–¢–¨
        elif message.text.lower() == 'screen':
                await message.answer("–°–µ–π—á–∞—Å –ø—Ä–∏—à–ª—é —Å–∫—Ä–∏–Ω —ç–∫—Ä–∞–Ω–∞. . .")
                sleep(2)
                screen = pyautogui.screenshot(r"T:\screenshots\screenshot.png")
                photo = open(r"T:\screenshots\screenshot.png", "rb")
                await bot.send_photo(message.chat.id, photo, "done")

    # –ó–ê–ë–õ–û–ö–ò–†–û–í–ê–¢–¨ –ü–ö
        elif message.text.lower() in ['lock', 'lockpc', 'lock_pc']:
            await message.answer("–ë–ª–æ–∫–∏—Ä—É—é –ü–ö. . .")
            sleep(2)
            os.system('Rundll32.exe user32.dll,LockWorkStation')


    # –ü–û–ì–†–£–ñ–ï–ù–ò–ï –ü–ö –í –°–û–ù
        elif message.text.lower() in ['sleep', 'sleeppc']:
            await message.answer("–ü—É–≥—Ä—É–∂–µ–Ω–∏–µ –≤ —Å–æ–Ω. . .")
            sleep(2)
            os.system("shutdown /h")

    # –£–ü–†–ê–í–õ–ï–ù–ò–ï –ó–í–£–ö–û–ú —Å –ø–æ–º–æ—â—å—é —Å—Ç—Ä–æ–Ω–Ω–µ–π –ø—Ä–∏–ª–∫–∏ 'cmdtools' - —Å—Å—ã–ª–∫—É –æ—Å—Ç–∞–≤–ª—é
        elif message.text.lower() == 'sound+10':
            await message.answer("–ü—Ä–∏–±–∞–≤–ª—è—é –∑–≤—É–∫ –Ω–∞ 10")
            await message.delete()
            sleep(1)
            os.system(fr"powershell c:\cmdtools\nircmd.exe changesysvolume 6555.5")
        elif message.text.lower() == 'sound-10':
            await message.answer("–£–±–∞–≤–ª—è—é –∑–≤—É–∫ –Ω–∞ 10")
            await message.delete()
            sleep(1)
            os.system(r"powershell c:\cmdtools\nircmd.exe changesysvolume -6555.5")

        elif message.text.lower() == 'closekeyb':
            await message.answer('–ó–∞–∫—Ä—ã–≤–∞—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.', reply_markup=ReplyKeyboardRemove())
            await message.delete()

        else:
            await message.answer('---ERROR COMMAND---')
    else:
        await message.answer("–¢–´ –ö–¢–û –¢–ê–ö–û–ô? –ü–†–û–í–ê–õ–ò–í–ê–ô")

        
